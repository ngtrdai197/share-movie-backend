on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  test-api:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['16']
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm install
      - name: Run testing by Jest
        run: npm run test

  build-and-push:
    needs: test-api
    if: ${{ success() }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Login to GitHub Container Registry
      #   run: echo ${{ env.CR_PAT }} | docker login ghcr.io -u ${{env.GITHUB_USER}} --password-stdin

      # - name: Build Docker Image
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     push: true
      #     tags: ghcr.io/${{env.GITHUB_USER}}/${{env.IMAGE_NAME}}:latest,ghcr.io/${{env.GITHUB_USER}}/${{env.IMAGE_NAME}}:${{ github.sha }}
      - name: Building and pushing the image
        uses: ./
        # uses: RafikFarhad/push-to-gcr-github-action@v5-beta # <- use this on your workflow
        with:
          gcloud_service_key: '${{ secrets.JSON_GCLOUD_SERVICE_ACCOUNT_JSON }}'
          registry: gcr.io
          project_id: ${{secrets.GCP_PROJECT_ID}}
          image_name: ${{env.IMAGE_NAME}}
          image_tag: latest, ${{ github.sha }}
          dockerfile: ./Dockerfile
          context: ./
          target: build

    env:
      IMAGE_NAME: share-movie-backend
      # GITHUB_USER: ngtrdai197
      # CR_PAT: ${{ secrets.CR_PAT }}

  deploy-api:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER_NAME }}
          key: ${{ secrets.SSH_KEY }}
          # script: sh ./simple-api.sh
      - name: 'Echo when access GCP'
        run: echo "Access GCP Successfully"
